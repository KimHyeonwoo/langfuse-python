name: Start the server

run:
  using: "composite"
  steps:
    - name: Clone langfuse server
      run: |
        git clone https://github.com/langfuse/langfuse.git ./langfuse-server && echo $(cd ./langfuse-server && git rev-parse HEAD)

    - name: Setup node (for langfuse server)
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Cache langfuse server dependencies
      uses: actions/cache@v3
      with:
        path: ./langfuse-server/node_modules
        key: |
          langfuse-server-${{ hashFiles('./langfuse-server/package-lock.json') }}
          langfuse-server-

    - name: Run langfuse server
      run: |
        cd ./langfuse-server

        echo "::group::Run langfuse server"
        TELEMETRY_ENABLED=false docker-compose up -d db
        echo "::endgroup::"

        echo "::group::Logs from langfuse server"
        TELEMETRY_ENABLED=false docker-compose logs
        echo "::endgroup::"

        echo "::group::Install dependencies (necessary to run seeder)"
        npm ci
        echo "::endgroup::"

        echo "::group::Seed db"
        cp .env.dev.example .env
        npx --yes prisma migrate deploy
        npx --yes prisma db seed
        echo "::endgroup::"

        echo "::group::Run server"
        TELEMETRY_ENABLED=false docker-compose up -d langfuse-server
        echo "::endgroup::"

    # Add this step to check the health of the container
    - name: Health check for langfuse server
      run: |
        echo "Checking if the langfuse server is up..."
        retry_count=0
        max_retries=5
        until curl --output /dev/null --silent --head --fail http://localhost:3000/api/public/health
        do
        retry_count=`expr $retry_count + 1`
        echo "Attempt $retry_count of $max_retries..."
        if [ $retry_count -ge $max_retries ]; then
            echo "Langfuse server did not respond in time. Printing logs..."
            docker logs langfuse-server_langfuse-server_1
            echo "Failing the step..."
            exit 1
        fi
        sleep 5
        done
        echo "Langfuse server is up and running!"
