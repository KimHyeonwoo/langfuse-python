# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import datetime as dt
import pydantic
import typing
from .usage_by_model import UsageByModel
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class DailyMetricsDetails(UniversalBaseModel):
    date: dt.date
    count_traces: int = pydantic.Field(alias="countTraces")
    count_observations: int = pydantic.Field(alias="countObservations")
    total_cost: float = pydantic.Field(alias="totalCost")
    """
    Total model cost in USD
    """

    usage: typing.List[UsageByModel]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
