# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .daily_metrics_details import DailyMetricsDetails
import pydantic
from ...utils.resources.pagination.types.meta_response import MetaResponse
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class DailyMetrics(UniversalBaseModel):
    data: typing.List[DailyMetricsDetails] = pydantic.Field()
    """
    A list of daily metrics, only days with ingested data are included.
    """

    meta: MetaResponse

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
