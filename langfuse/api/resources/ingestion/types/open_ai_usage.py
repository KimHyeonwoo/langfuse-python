# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class OpenAiUsage(UniversalBaseModel):
    """Usage interface of OpenAI for improved compatibility.
    """

    prompt_tokens: typing.Optional[int] = pydantic.Field(
        alias="promptTokens", default=None
    )
    completion_tokens: typing.Optional[int] = pydantic.Field(
        alias="completionTokens", default=None
    )
    total_tokens: typing.Optional[int] = pydantic.Field(
        alias="totalTokens", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
