# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class PromptMeta(UniversalBaseModel):
    name: str
    versions: typing.List[int]
    labels: typing.List[str]
    tags: typing.List[str]
    last_updated_at: dt.datetime = pydantic.Field(alias="lastUpdatedAt")
    last_config: typing.Optional[typing.Any] = pydantic.Field(
        alias="lastConfig", default=None
    )
    """
    Config object of the most recent prompt version that matches the filters (if any are provided)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
