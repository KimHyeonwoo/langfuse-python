# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .chat_message import ChatMessage
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Prompt_Chat(UniversalBaseModel):
    type: typing.Literal["chat"] = "chat"
    prompt: typing.List[ChatMessage]
    name: str
    version: int
    config: typing.Optional[typing.Any] = None
    labels: typing.List[str]
    tags: typing.List[str]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class Prompt_Text(UniversalBaseModel):
    type: typing.Literal["text"] = "text"
    prompt: str
    name: str
    version: int
    config: typing.Optional[typing.Any] = None
    labels: typing.List[str]
    tags: typing.List[str]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


Prompt = typing.Union[Prompt_Chat, Prompt_Text]
