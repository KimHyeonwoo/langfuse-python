# This file was auto-generated by Fern from our API Definition.

from .trace import Trace
import pydantic
import typing
from .observations_view import ObservationsView
from .score import Score
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class TraceWithFullDetails(Trace):
    html_path: str = pydantic.Field(alias="htmlPath")
    """
    Path of trace in Langfuse UI
    """

    latency: float = pydantic.Field()
    """
    Latency of trace in seconds
    """

    total_cost: float = pydantic.Field(alias="totalCost")
    """
    Cost of trace in USD
    """

    observations: typing.List[ObservationsView] = pydantic.Field()
    """
    List of observations
    """

    scores: typing.List[Score] = pydantic.Field()
    """
    List of scores
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
